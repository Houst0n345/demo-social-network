{"version":3,"sources":["components/Messages/MessagesReduxForm.jsx","components/Messages/Message/Message.jsx","components/Messages/Messages.jsx","hoc/withAuthRedirectComp.js","components/Messages/MessagesContainer.jsx"],"names":["maxLength500","maxLengthCreator","MessagesReduxForm","reduxForm","form","props","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","className","styleFor","button","Message","message","Messages","messages","map","m","values","addMessage","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","messagesPage","Component","RedirectComponent","this","React"],"mappings":"sMAMIA,EAAeC,YAAiB,KAiBrBC,EAHSC,YAAU,CAACC,KAAM,YAAjBD,EAZL,SAACE,GAEhB,OACI,0BAAMC,SAAUD,EAAME,cAClB,kBAACC,EAAA,EAAD,CAAOC,KAAK,UAAUC,UAAWC,IAAUC,SAAU,CAACC,IAAUb,KAChE,6BACI,4BAAQc,UAAWC,IAASC,QAA5B,aCDDC,EAVD,SAACZ,GAEX,OACI,6BACI,6BAAMA,EAAMa,WCgBTC,EAhBA,SAACd,GACZ,IAGIa,EAAUb,EAAMe,SAASC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAASJ,QAASI,EAAEJ,aAC1D,OACI,6BACKA,EACD,kBAAC,EAAD,CAAmBZ,SAPP,SAACiB,GACjBlB,EAAMmB,WAAWD,EAAOL,c,+DCJ5BO,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SCaRE,sBACXC,aALkB,SAACJ,GAAD,MAAY,CAC9BN,SAAUM,EAAMK,aAAaX,YAIJ,CAACI,kBDZM,SAACQ,GAAe,IAC1CC,EADyC,iLAKvC,OAAO,kBAACD,EAAcE,KAAK7B,WALY,GACf8B,IAAMH,WAStC,OAAOF,YAAQL,EAARK,CAAoCG,KCChCJ,EAVS,SAACxB,GACrB,OACI,kBAAC,EAAaA","file":"static/js/4.1a76f31b.chunk.js","sourcesContent":["import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../common/FormComponents/FormComponents\";\r\nimport styleFor from \"../common/css/button.module.css\";\r\n\r\nlet maxLength500 = maxLengthCreator(500);\r\n\r\nlet MessagesForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name='message' component={Textarea} validate={[required, maxLength500]}/>\r\n            <div>\r\n                <button className={styleFor.button}>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nlet MessagesReduxForm = reduxForm({form: 'messages'})(MessagesForm);\r\n\r\n\r\nexport default MessagesReduxForm;","import React from \"react\";\r\n\r\n\r\nlet Message = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div>{props.message}</div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport MessagesReduxForm from './MessagesReduxForm';\r\nimport Message from \"./Message/Message\";\r\n\r\n\r\n\r\n\r\nlet Messages = (props) => {\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.message)\r\n    };\r\n    let message = props.messages.map(m => <Message message={m.message}/>);\r\n    return (\r\n        <div>\r\n            {message}\r\n            <MessagesReduxForm onSubmit={addNewMessage}/>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default Messages;","import React from 'react';\r\n//import {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport const withAuthRedirectComp = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n            // if (!this.props.isAuth) return <Redirect to='/login'/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n};\r\n\r\n\r\n\r\n","import Messages from \"./Messages\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {addMessage} from \"../../Redux/messagesPageReducer\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirectComp} from \"../../hoc/withAuthRedirectComp\";\r\n\r\n\r\n\r\nlet MessagesContainer = (props) => {\r\n    return (\r\n        <Messages {...props}/>\r\n    )\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    messages: state.messagesPage.messages\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addMessage}),\r\n    withAuthRedirectComp)(MessagesContainer);"],"sourceRoot":""}